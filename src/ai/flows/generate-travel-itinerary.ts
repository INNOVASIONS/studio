// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a personalized travel itinerary based on a destination and travel preferences.
 *
 * - generateTravelItinerary - A function that generates a travel itinerary.
 * - GenerateTravelItineraryInput - The input type for the generateTravelItinerary function.
 * - GenerateTravelItineraryOutput - The return type for the generateTravelItinerary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTravelItineraryInputSchema = z.object({
  destination: z.string().describe('The destination for the travel itinerary.'),
  preferences: z
    .string()
    .describe(
      'The travel preferences of the user, including interests, budget, and travel style.'
    ),
});

export type GenerateTravelItineraryInput = z.infer<
  typeof GenerateTravelItineraryInputSchema
>;

const GenerateTravelItineraryOutputSchema = z.object({
  itinerary: z
    .string()
    .describe(
      'A detailed daily itinerary of travel activities for the specified destination, tailored to the user preferences.'
    ),
});

export type GenerateTravelItineraryOutput = z.infer<
  typeof GenerateTravelItineraryOutputSchema
>;

export async function generateTravelItinerary(
  input: GenerateTravelItineraryInput
): Promise<GenerateTravelItineraryOutput> {
  return generateTravelItineraryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTravelItineraryPrompt',
  input: {schema: GenerateTravelItineraryInputSchema},
  output: {schema: GenerateTravelItineraryOutputSchema},
  prompt: `You are an expert travel assistant. Generate a detailed travel itinerary based on the user's destination and preferences.

Destination: {{{destination}}}
Preferences: {{{preferences}}}

Itinerary:`,
});

const generateTravelItineraryFlow = ai.defineFlow(
  {
    name: 'generateTravelItineraryFlow',
    inputSchema: GenerateTravelItineraryInputSchema,
    outputSchema: GenerateTravelItineraryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
